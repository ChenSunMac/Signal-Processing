function [distance, thickness] = ProcessTheSampleSignalByFFT(TxPulse)

%% Initialization , information can be extracted from .bin file
SampleRate = [15000000];

PulseLength = 45;

fHigh = 3800000;

fLow = 300000;

RxSignal = [6.1035156e-05;6.1035156e-05;0;0.00073242188;0.00064086914;0;0.00091552734;0.00042724609;0;9.1552734e-05;0.00015258789;0.00015258789;0.00057983398;0.00085449219;0.00039672852;0.00036621094;0.0011291504;0.00097656250;0.00082397461;0;3.0517578e-05;0.00039672852;0;0.00012207031;0.00039672852;0.00039672852;0.00051879883;0;0.00024414063;0.00030517578;0.00030517578;0.00036621094;0.00061035156;0;0;0.00021362305;0;0.00021362305;0;0.0011901855;0;0.00054931641;0;0.00042724609;0;0.00021362305;0;0;0.00024414063;0.00030517578;0;9.1552734e-05;0.00051879883;0.00094604492;0.00036621094;0;0.00067138672;0.00033569336;0.00057983398;0;0.0013732910;0;0;0;0.00030517578;0.00054931641;9.1552734e-05;0.00030517578;0;0;0;0.00054931641;0;0.00030517578;0;0.00030517578;0;0.00018310547;0;0.00030517578;0.00051879883;0;0.00064086914;0.00054931641;0;0;0.00061035156;9.1552734e-05;0;0.00064086914;0;0;0.00027465820;0.00064086914;0.00030517578;0.00057983398;0.00054931641;0.00024414063;3.0517578e-05;0.00057983398;0;0;0.00042724609;0.00076293945;0.00027465820;0.00051879883;0;0.00042724609;0.00033569336;0;0.00088500977;0.00054931641;3.0517578e-05;0;0.0010070801;0.00079345703;0;6.1035156e-05;0.00027465820;0.00033569336;0;0.00045776367;0;0;0;0.00024414063;0;0.00051879883;0.00042724609;0.00048828125;0.00021362305;0.00024414063;0.00079345703;3.0517578e-05;0.00033569336;0;0.00039672852;0.00018310547;0.00018310547;0.00018310547;0.00021362305;0.00054931641;0;0;0.00042724609;0.00079345703;0.00036621094;0;0.00094604492;0;0;0.00064086914;0;0;0.00042724609;0.00036621094;0.00018310547;0.00033569336;0.00027465820;0.00067138672;0.00088500977;6.1035156e-05;0;9.1552734e-05;0.00045776367;0.00033569336;0.00039672852;0.00048828125;0.00054931641;0.0012817383;0;0;0.00042724609;0.00024414063;0;0.00015258789;0.00088500977;0.00024414063;0.00021362305;0.00015258789;0.00039672852;0.00054931641;0.0015258789;0.00015258789;0;0.00067138672;0.00027465820;0.00030517578;0.00061035156;0.00021362305;0.00076293945;0;0.00091552734;0;9.1552734e-05;0.00018310547;0;0.00079345703;0.00076293945;0.00076293945;0.00073242188;6.1035156e-05;0;0;0;0;0;0;0.0018005371;0.0023498535;0.0017700195;0.00024414063;0;0;0;0.00012207031;0.0023803711;0.0024719238;0.0017089844;0.00057983398;0;0;0;0;0;0.0012817383;0.0016479492;0.0013122559;0.0011901855;6.1035156e-05;0;0;0;0;0.00070190430;9.1552734e-05;0.0015258789;0.0010375977;0.00057983398;0;0;0;9.1552734e-05;0.00088500977;0.00070190430;0.00061035156;0.00085449219;0;0.00079345703;0;0;0;0;0;0.0011291504;0.0011291504;3.0517578e-05;0;0;0.00051879883;0;0.0013427734;0.0018005371;0.00088500977;0;0;0;0;0.00018310547;0.00045776367;0.00094604492;0.00097656250;0.00076293945;0.00064086914;0;0.00088500977;0;0.00027465820;0;0;0;0.00021362305;0;9.1552734e-05;0.00036621094;0.0011596680;0.0014343262;9.1552734e-05;0;0.00018310547;0;6.1035156e-05;0.00067138672;0.00015258789;0;0.00073242188;0.0013122559;0;0;0;0;0.00082397461;0.0010070801;0.0013427734;0.00045776367;0;0;0;0;0;0.0011291504;0.0011901855;0.0010681152;0;0;0;0;0.00039672852;0;0.0011901855;0.0014648438;0.00057983398;0;6.1035156e-05;0;0;0;6.1035156e-05;0.0015869141;0.0014038086;0.00024414063;0.00082397461;0.00064086914;0.00061035156;0.00048828125;0.00033569336;0.00021362305;0;0;0;0.00015258789;0;0.00033569336;0.0010375977;0.00027465820;0.00054931641;0.00067138672;0.00030517578;0;0;0.00042724609;0.00027465820;0.0010070801;0.0011291504;0.00021362305;0;0;0.00051879883;0.00012207031;0.0012817383;0.00045776367;0.00085449219;0.00024414063;0;0.00033569336;0;0;0.00085449219;0.0011291504;0.00082397461;0.00033569336;0;0;0;0;0;0.00027465820;0.00027465820;0.0014343262;0.00021362305;0.00021362305;0;0;0;0;0.00070190430;0.0012817383;0.0010986328;0.0013427734;0.00079345703;0.00033569336;0.00091552734;0.00033569336;0;0;0;0;0;9.1552734e-05;0.00021362305;0.0013732910;0.0012207031;0.0015869141;0.00012207031;0;0;0;0;0.00012207031;0;0.00061035156;0.00079345703;0.0010375977;0.0027160645;0.0049438477;0.0077514648;0.011566162;0.014617920;0.020385742;0.023040771;0.012084961;-0.021606445;0;0;-0.10748291;0;-0.098876953;0;0.082366943;0.19921875;0.28988647;0.31195068;0.24032593;0.085296631;-0.11370850;0.69165039;-0.43743896;0.56192017;-0.27929688;0.019378662;0.33026123;0.49423218;0.42013550;0.22036743;-0.020904541;0;0.55120850;-0.42861938;0;0.034088135;0.34909058;0.58593750;0.42892456;0;-0.55209351;0.43643188;0;0.34677124;0.32647705;0.0032348633;0;0.19714355;0.21206665;-0.16247559;0.59887695;0;0.13687134;0.064636230;0;0.033172607;0.19802856;0.11447144;0;-0.029266357;0.0093078613;0;0;0;0;0.00073242188;-0.037689209;0;0;0;0.051605225;0.11795044;0.14956665;0.14953613;0.098205566;0;-0.16873169;0;0;0;0.16085815;0.35580444;0.34808350;0.12445068;0;0.60928345;-0.34219360;-0.068572998;0.24246216;0.33728027;0.16329956;0;0;0;0;-0.029296875;0;0.010711670;0.077911377;0.066467285;0.0021972656;0;0.014526367;0.014801025;-0.036529541;0;-0.043945313;0;0.033233643;0.064453125;0.075408936;0.044891357;-0.012664795;-0.068328857;-0.092041016;-0.076812744;-0.037689209;0;0.033660889;0.070495605;0.10073853;0.10449219;0.071136475;0.0054016113;0;0;0;-0.12258911;0.022430420;0.18176270;0.25942993;0.18200684;-0.012969971;0;0;-0.14804077;0.049774170;0.17687988;0.15014648;0.034698486;0;0;0;-0.046600342;0;-0.037872314;0.048492432;0.082153320;0.036132813;-0.0047912598;0.0035400391;0.013580322;0;0;0;0;0.023437500;0.041137695;0.049804688;0.039245605;0.010467529;-0.030456543;-0.054199219;-0.060272217;0;-0.029022217;-0.0056457520;0.028503418;0.061035156;0.083221436;0.078277588;0.043395996;0;0;0;0;-0.061218262;0.056823730;0.15496826;0.16552734;0.077880859;-0.054534912;0;0;-0.043670654;0.061401367;0.093383789;0.054351807;0.013732910;0.0090637207;0.012756348;0;0;-0.074920654;0;0.060516357;0.051727295;0.014801025;0.0093688965;0.020751953;0;0;0;-0.015380859;0.011322021;0.026947021;0.035675049;0.036407471;0.020812988;0;0;0;-0.038513184;-0.029937744;0;0.0054931641;0.031402588;0.051361084;0.060241699;0.050048828;0.024444580;0;0;-0.098052979;-0.083557129;0;0.068115234;0.11581421;0.096710205;0.021911621;-0.058746338;0;-0.067962646;-0.0046081543;0.034271240;0.033996582;0.023345947;0.028228760;0.034332275;0.011352539;-0.046356201;-0.075195313;-0.035888672;0.025329590;0.037567139;0.015686035;0.0078430176;0.025543213;0.020904541;0;0;0;-0.0067749023;0.0056762695;0.016784668;0.027130127;0.027709961;0.014953613;-0.0045166016;-0.020996094;-0.028320313;-0.030609131;0;-0.015136719;0.0059814453;0.031433105;0.047698975;0.051605225;0.038208008;0.012786865;-0.028656006;0;-0.077026367;-0.046569824;0.013366699;0.063690186;0.076049805;0.045532227;0;-0.044799805;0;-0.027923584;0.0030822754;0.017608643;0.016754150;0.024291992;0.036102295;0.024566650;0;-0.062500000;-0.051177979;0;0.030822754;0.023132324;0.014556885;0.025543213;0.029510498;0.0042724609;-0.029876709;0;0;0;0.0037231445;0.018981934;0.030456543;0.026428223;0.012878418;-0.0054321289;0;0;0;0;-0.013732910;0.0030517578;0.023590088;0.035461426;0.038543701;0.029510498;0.0083312988;-0.027435303;-0.052642822;-0.053497314;-0.023315430;0.019531250;0.047271729;0.050201416;0.027008057;0;-0.030639648;-0.028411865;0;0;0;0.015747070;0.034729004;0.037292480;0.010955811;0;-0.044891357;-0.019592285;0.010864258;0.012756348;0.0012207031;0.010253906;0.025390625;0.015106201;-0.014556885;-0.022705078;0;0.0063171387;0.0068359375;0.0081787109;0.010406494;0.0071716309;0.00045776367;0;-0.0041809082;0;-0.014495850;0;0;0;0.0099487305;0.025817871;0.033325195;0.029205322;0.017700195;-0.0074462891;0;0;0;-0.0049438477;0.025665283;0.039001465;0.034637451;0.017395020;-0.0061950684;0;-0.020751953;0;0;-0.0051879883;0.020019531;0.035552979;0.027221680;0;-0.027770996;-0.023223877;-0.0053405762;0.00079345703;-0.0067138672;0;0.020141602;0.023071289;0.0022277832;0;-0.012176514;0;0.0034484863;0.0032348633;0.0069274902;0.0091247559;0.0065307617;0.0016174316;0;-0.0045166016;0;0;0;0;0;0.013061523;0.022918701;0.026641846;0.022033691;0.0093383789;-0.012420654;-0.028839111;-0.030487061;0;0.0053710938;0.023468018;0.028625488;0.022064209;0.0069885254;0;-0.015228271;0;0;0;0.0077209473;0.025177002;0.027252197;0.010040283;-0.014892578;-0.021118164;0;0.00073242188;-0.0050659180;-0.0068359375;0.0075073242;0.018402100;0.0072937012;0;0;0.0019226074;0.0056762695;0.00094604492;0.0014953613;0.0050659180;0.0049133301;0.0027465820;0.0012817383;0.00076293945;0;0;-0.012603760;-0.013122559;0;0.00048828125;0.011901855;0.020507813;0.023529053;0.018035889;0.0034790039;-0.015014648;0;-0.022735596;0;0.0079345703;0.019592285;0.020965576;0.013519287;0.0022583008;-0.0067749023;0;-0.013702393;-0.011749268;0;0.012817383;0.021575928;0.015258789;0;-0.014556885;0;0;0;0;0;0.012725830;0.012176514;0;0;0.00015258789;0.0056152344;0.0010986328;0;0.0024414063;0.0046691895;0.0029907227;0.0016174316;0.0021667480;0.00033569336;0;0;0;0;-0.0072326660;0.0015563965;0.011962891;0.017944336;0.019439697;0.011840820;0;-0.014251709;0;-0.013610840;0;0.0063171387;0.012176514;0.013366699;0.0091552734;0.0021972656;0;0;0;0;0.0031433105;0.013702393;0.015167236;0.0051269531;-0.0057067871;-0.0059204102;0;0;-0.0075073242;-0.0078125000;0.0043640137;0.010681152;0.0029602051;-0.0045776367;0;0.0061950684;0.0046691895;0;0;0.0028686523;0.0021972656;0.0015563965;0.0012817383;0.0022277832;9.1552734e-05;-0.0042724609;0;-0.012054443;0;-0.0039978027;0.0046081543;0.012908936;0.016937256;0.015106201;0.0065307617;-0.0046386719;-0.013183594;-0.013885498;0;0;0.0052490234;0.0093688965;0.010284424;0.0066833496;0.0014953613;0;-0.0071105957;0;0;0.0066833496;0.010803223;0.0067138672;0;-0.0053100586;0;0.0018920898;0;-0.0075683594;0;0.0066223145;0.0049743652;0;0;0.0046691895;0.0056152344;0.00061035156;0;0.0010070801;0.00064086914;0.00024414063;0.00070190430;0.0035400391;0.0031738281;0;-0.0049438477;0;0;-0.0075073242;0;0.0061035156;0.011871338;0.013488770;0.010070801;0.0020446777;-0.0072021484;0;0;-0.0050964355;0.0010070801;0.0063476563;0.0083312988;0.0069274902;0.0028381348;0.00054931641;0;-0.0056457520;0;0.0021972656;0.0068054199;0.0057373047;0.00097656250;0;0.00030517578;0.0029296875;0;-0.0062866211;-0.0044250488;0.0014648438;0.0035095215;0;0;0.0025329590;0.0068054199;0.0028991699;0;0;0.00064086914;0;0.00027465820;0.0021667480;0.0033874512;0.0019531250;0;-0.0064392090;0;-0.0076904297;-0.0039978027;0.00088500977;0.0072631836;0.010772705;0.011016846;0.0070800781;0.00021362305;-0.0068054199;0;-0.0067443848;0;0.0012512207;0.0048522949;0.0055236816;0.0037536621;0.0028686523;0.00030517578;0;0;0;0.0027465820;0.0039367676;0.0016784668;0;0.00054931641;0.0030212402;0.0022888184;0;-0.0050964355;0;0.0025939941;0.00051879883;0;0.00085449219;0.0065612793;0.0060729980;0.00070190430;0;0.00030517578;0;0;0.00061035156;0.0024719238;0.0036926270;0.00030517578;0;-0.0059814453;-0.0072937012;-0.0056457520;0;0.0031738281;0.0074157715;0.0092468262;0.0072021484;0.0029602051;0;-0.0056457520;-0.0055541992;0;0;0.0021667480;0.0036926270;0.0033569336;0.0025024414;0.0013427734;0.00048828125;0;0;0.0011901855;0.0023498535;0.0010986328;0;0;0.0012817383;0.0038757324;0.0017395020;0;0;0.00076293945;0;-0.0042114258;0;0.0047302246;0.0069580078;0.0031127930;0;0;0;0;0;0.0023193359;0.0038452148;0.0026245117;0;-0.0047302246;-0.0075683594;-0.0069885254;-0.0050354004;0.00042724609;0.0050964355;0.0071716309;0.0075073242;0.0051879883;0;0;-0.0043640137;0;0;0.00027465820;0.0023803711;0.0021057129;0.0011291504;0.0014038086;0.00088500977;0;0;0.00039672852;0.0013732910;0.0019836426;0;0;0.00054931641;0.0026245117;0.0025634766;0;0;0;0;0;0;0.0013427734;0.0050659180;0.0041503906;0.00018310547;0.00073242188;0.00088500977;0;0;0.00054931641;0.0033569336;0.0024108887;0.00030517578;0;-0.0041503906;-0.0054626465;-0.0043640137;0;0.0014648438;0.0045166016;0.0050964355;0.0042419434;0.0011291504;0;0;0;0;0;0;0;0.00073242188;0.00079345703;0.0018310547;9.1552734e-05;0.00070190430;0.0010070801;0.0016784668;6.1035156e-05;0;0;0.00039672852;0.0020446777;0.0030212402;0.00088500977;0;0;0;0;0;0.00021362305;0.0040588379;0.0048522949;0.0027770996;0;0.00033569336;0;0;0.00012207031;0.0029907227;0.0034790039;0.0016479492;0;-0.0039672852;-0.0050354004;-0.0052795410;0;0.00015258789;0.0026245117;0.0042724609;0.0041503906;0.0027160645;0.00073242188;0;0;0;0;0;0.00024414063;0;0;0.00042724609;0.00048828125;0.0017395020;0.0019836426;0.00094604492;0.0017395020;0.00012207031;0;0;0;0.0030822754;0.0023193359;0.00067138672;0;0;0;0;0;0.0016174316;0.0040588379;0.0026855469;0.00076293945;0;0.00079345703;0.00061035156;0;0.0014953613;0.0018005371;0.0021667480;0;0;0;0;0;0;0;0.0021362305;0.0026550293;0.0022583008;0.0014953613;0.00067138672;0.00082397461;0;0;0;0;0;0;0;0.00064086914;0.0018920898;0.0016174316;0.00048828125;0.00079345703;0;0;0;0.0010986328;0.0022277832;0.0021057129;0.00057983398;0;0;0;0;0;0.0019836426;0.0042114258;0.0039672852;0.00076293945;0;9.1552734e-05;0;0;0.0018310547;0.0027160645;0.0028686523;0.00021362305;0;0;0;0;0;0;0.0012817383;0.0020446777;0.0014343262;0.00079345703;0;0.00036621094;0.00048828125;0.0010070801;0.00070190430;0;0;0;0;0;0.0022888184;0.0012512207;0.0023498535;0.0010681152;0;0;0;0;0.00097656250;0.0021667480;0.0019531250;0.00051879883;0;0;0;0;0;0.0019531250;0.0025634766;0.0015563965;0.00021362305;0.00091552734;0;0;0.00085449219;0.0019531250;0.0023498535;0.0013122559;0;0;0;0;0;0;0.00033569336;0.0012512207;0.00042724609;0.0017395020;0.0013732910;0.00079345703;0.00091552734;0.00033569336;6.1035156e-05;0.00021362305;0;0;0;0;0.0013427734;0.0016479492;0.0017089844;0.00070190430;0.00030517578;0;0;0.00079345703;0.00036621094;0.0019836426;0.0018615723;0;0;0;0;0;0;0.0013122559;0.0028381348;0.0017700195;0.00021362305;0;0.00024414063;0.00015258789;0.0014038086;0.0020751953;0.0025329590;0.0020446777;0;0;0;0;0;0;0.00030517578;0.0012512207;0.00030517578;0;3.0517578e-05;0;0.0012207031;0.0020751953;0.0014343262;0.0011596680;0;0;0;0;0.00079345703;0.0012817383;0.0019836426;0.0022888184;0.00039672852;0;0;0;0;0.0013427734;0.0021972656;0.0013732910;0;0;0;0;0;0;0.0024719238;0.0026245117;0.0010681152;0;0.00015258789;0.00054931641;9.1552734e-05;0.00061035156;0.0017700195;0.0018615723;0.0011596680;0;0;0;0;0;0;0.00015258789;0.00018310547;6.1035156e-05;0;0.00018310547;0.00097656250;0.0015869141;0.00085449219;0.00036621094;0.00021362305;0;0;0;0;0.00070190430;0.0010681152;0.00054931641;0.00039672852;0;0;0;0;0.00094604492;0.0013122559;0.00082397461;0.00015258789;0;0;0;0;0;0.0018310547;0.0026855469;0.00064086914;0;0.00027465820;0.00070190430;0.00027465820;0.00061035156;0.0020141602;0.0013732910;0;0;0;0;0;0;0.00045776367;0.00045776367;0.00018310547;0;0;0;0.0010070801;0.0019531250;0.0023498535;0.0018005371;0.00054931641;0;0;0;0.00012207031;0.00039672852;0.0013732910;0.0015869141;0.00024414063;0;0;0;0;0.0014038086;0.0021057129;0.0021057129;0.00036621094;0;0;0;0;0;0.00070190430;0.0017395020;0.0018310547;0.00054931641;0;0.00085449219;0;0.0010681152;0.00085449219;0.0017395020;0.0014343262;0.00015258789;0;0;0;0;0.00027465820;0.00057983398;0.0010375977;0.00051879883;0.00061035156;9.1552734e-05;0;0.00082397461;0.0016174316;0.0016479492;0.00048828125;0;0;0;0;0;0.0011596680;0.0010375977;0.00021362305;0;0;0;0;0.00054931641;0.00073242188;0.0015869141;0;0;0;0;6.1035156e-05;0.00045776367;0.00073242188;0.0016479492;0.0015563965;0;0;0.00027465820;0.0010986328;0.00097656250;0.0016479492;0.0012207031;0.00073242188;0.00036621094;0;0;0;0;9.1552734e-05;6.1035156e-05;0;9.1552734e-05;0;0;0;0.0013427734;0.0019226074;0.0016479492;0.0020446777;0;0;0;0;0.00027465820;0.0013122559;0.0012512207;0.00079345703;0.00018310547;0;0;0;0.00024414063;0.0019226074;0.0014038086;0.00085449219;0;0;0;0;0;0.00079345703;0.0015869141;0.0013732910;0.00036621094;0;0;0;0.00033569336;0.00085449219;0.0012207031;0.0015869141;0;0;0;0;0.00021362305;6.1035156e-05;0.00073242188;0.00021362305;0;0.00015258789;0;0;0.00076293945;0.0011596680;0.0014038086;0.0018310547;0.0012817383;9.1552734e-05;0;0;0;0.0010070801;0;0.00027465820;0;9.1552734e-05;9.1552734e-05;0.00073242188;0.00051879883;0.0010070801;0.0013427734;0.00088500977;0.00061035156;0;6.1035156e-05;0;0.00021362305;0;0.00036621094;0.0012817383;0.00051879883;3.0517578e-05;0;0;0.00042724609;0.0017700195;0.0011901855;0.0011596680;0.0010681152;0.00012207031;0;0;0.00088500977;0.00079345703;0.00091552734;0.00015258789;0;0;0;0;0;0.0013427734;0.0014038086;0.0019531250;0;0.00030517578;0;0;0.00024414063;0.00073242188;0.0013732910;0.0010375977;0.00015258789;0;0;0;0.00042724609;0.00024414063;0.00042724609;0.0010986328;0.00027465820;0;0;0;0;0.00033569336;0.00067138672;0.0011596680;0.0010681152;0.00024414063;0;0;0;0;0.00042724609;0.0015869141;0.0017700195;0.00021362305;0;0;0;0.00045776367;0.00033569336;0.00088500977;0;0;0;0;0;0;0.0014953613;0.0018310547;0.0011901855;0.00018310547;6.1035156e-05;0.00042724609;0;0;0;0.00051879883;0.00042724609;0.00015258789;0;0;0;0.00067138672;0.0012512207;0.00088500977;0.00085449219;0.00021362305;0;0;0;0.00039672852;0.00021362305;0.00042724609;0.00024414063;3.0517578e-05;0;0;0.00051879883;0.0010986328;0.00057983398;0.0013122559;0.00079345703;0.00027465820;0;0.00021362305;0.00057983398;0.0011901855;0.0013427734;0.0010375977;0;0;0;3.0517578e-05;0;0.00012207031;0.00076293945;0.00082397461;0.00024414063;0.00036621094;0;0.00033569336;0;0.0013732910;0.0013122559;0.0010375977;0.00067138672;0;0;0;0;0.00067138672;0.00045776367;0.00073242188;0.00085449219;0.00082397461;0;0;0;0.00067138672;0.00054931641;0.00030517578;0.00033569336;0.00045776367;0;0;0;0.00042724609;0.0010070801;0.0014648438;0.00064086914;0.0014343262;0;0;0;0.00045776367;0.00067138672;0.00067138672;0;0;0;0;0;0.00012207031;6.1035156e-05;0.0016479492;0.0016479492;0.00012207031;0.00036621094;0;0;3.0517578e-05;0;0.00076293945;0;0;0.00024414063;0.00024414063;0;0.00021362305;0.00085449219;0.00024414063;0.00057983398;0;0.00021362305;0;0.00036621094;0.00091552734;0.00054931641;0.00067138672;0.00070190430;0;0;0;0;0.0010375977;0.0012207031;0.0011901855;0.0012207031;0.00048828125;9.1552734e-05;0;0;3.0517578e-05;0.0014343262;0.00057983398;0.00051879883;0.00085449219;0;0;0;0;0.00057983398;0.00067138672;0.00039672852;0;0;0;0;0.00018310547;0.00097656250;0.00067138672;0.00073242188;0.00012207031;0;0;0;0.00036621094;0.00091552734;0.0018005371;0.0016784668;0.0016784668;0.00045776367;0.00018310547;0;0;0.0012207031;0.00088500977;0.0012512207;0.00015258789;0;0;0;0;0.00088500977;0.00091552734;0;0.0010375977;0.0020141602;0.00045776367;0;0;0;0.00045776367;0.00042724609;0;0.00012207031;0;0;0.00018310547;0.0010070801;0.0017089844;0.00048828125;0.00048828125;0.00067138672;0;0.00027465820];

TimeBeforeRecordingIsStarted = [6601];

%% Parameters Configured (Guessed)
NOMINAL_DISTANCE_TO_WALL = 0.100;
D_MIN = 0.009;
D_NOM = 0.0123;
V_WATER = 1500;
PIT_DEPTH = 0.002;
V_PIPE = 5900;   
delay = 0;
%% Some easy calculation good to know
SEARCH_RANGE = round(( NOMINAL_DISTANCE_TO_WALL / ( 3*V_WATER )) * SampleRate);
freqFundamentalMinimum = V_PIPE/(2*D_NOM);
%% Calculated minimum peak distance
peakDistance = (PIT_DEPTH * SampleRate * 2) / V_WATER  ;



%% Parameters Set for Analyzing
FFT_LENGTH = 4096;
PERIODOGRAM_OVERLAP = 0.5;
window = 'rect';
PERIODOGRAM_SEGMENT_LENGTH = 400;
NUMBER_OF_PERIODOGRAM_TO_AVERAGE = 1;
PROMINENCE = 4;
Q_DB_ABOVE_NOISE = 10;
Q_DB_MAX = 10;
%% Calculate Distance
[r, lags] = xcorr(RxSignal(1:end), TxPulse);

% Find the index where the cross correlation is at its maximum            
[valueMax, indexMax] = max(r);
%  If the signal level is too low
if( valueMax < 1e-4 ) 
                     error('received signal too small')
end

[adjustBeginMain, adjustEndMain, indexSecondPeak] = ...
    calculateStartStopAbsorption(SEARCH_RANGE, peakDistance, r, indexMax, valueMax);

% Find the lag (delay) at this index in number of samples.            
lagInterpolateHighestPeak = findLagUsingInterpolation( r, lags, indexMax);            
firstReflectionIndex = delay + round(lagInterpolateHighestPeak);   

% Experiment: Find pit dept. "Edge detection"
    if(indexSecondPeak ~= indexMax)
        % Interpolate
        lagInterpSecondPeak = findLagUsingInterpolation(r, lags, indexSecondPeak);                                                
                
        pitDept = ((lagInterpSecondPeak - lagInterpolateHighestPeak) * V_WATER) / ( 2 * SampleRate );
    end
            
% Experiment: Find next reflection            
delayNumberSamples = (NOMINAL_DISTANCE_TO_WALL / V_WATER) * SampleRate;

% Dont calculate nextReflecationIndex if receivedSignal is too short.  
% Need to add function here
% just simply set the secondreflect to be the end of the 2000 points
secondReflectionIndex = length(RxSignal);


 % Calculate total travel time for transmitted signal. 
signal_delay = lagInterpolateHighestPeak + TimeBeforeRecordingIsStarted;
% Calculate distance to pipe wall from transducer d = (v*t)/(2*Fs)
distance = single(signal_delay) * V_WATER / ( 2 * SampleRate );



%% Noise calculation, calculate noise floor

% Extract noise signal from lab %% CHANGE BY CS, Change 1000 to 1
noiseSignal = RxSignal(1:firstReflectionIndex-20);

% Noise PSD calculation: Using pWelch or periodogram
% Need to add function and verify
win = getWindow(window, length(noiseSignal));
                  
[psdNoise, f] = periodogram(noiseSignal, win, FFT_LENGTH, SampleRate,'psd');  
% try using wavelet to eliminate the noise


%% Or set noise floor to fixed value
meanNoiseFloor = -135.7;

%% Calculate psdMain and psdResonance
beginMain = firstReflectionIndex - adjustBeginMain;
endMain = firstReflectionIndex + PulseLength + adjustEndMain;
mainLength = endMain - beginMain;
mainSignal = RxSignal(beginMain:(endMain-1));

mainWindow = getWindow(window, double(mainLength));

[psd, f] = periodogram(mainSignal, mainWindow, FFT_LENGTH, SampleRate, 'psd');
% Convert to dB
psdDb = 10*log10(psd);
psdMain = double(psdDb);
fVector = double(f);
% Resonance
resonanceMaxLength = abs(secondReflectionIndex - firstReflectionIndex) - PulseLength;
beginResonance = endMain + 1;              
endResonance = beginResonance + resonanceMaxLength - 1 - adjustEndMain; 
            
resonanceSignal = RxSignal(beginResonance:endResonance);
% Use Periodogram calculate resonance psd
[psdResonanceMatrix, f, numberOfPsd, lineIndexPsdResonanceSegments] = ...
    calculatePsdUsingPeriodogram( resonanceSignal, window, PERIODOGRAM_SEGMENT_LENGTH, PERIODOGRAM_OVERLAP, NUMBER_OF_PERIODOGRAM_TO_AVERAGE, SampleRate, FFT_LENGTH ); 
psd = psdResonanceMatrix(1,:)'; 
psdResonance = double(psd);
%% Find peaks in the RESONANCE spectrum
% Using mean level above noise floor in range [fLow, fHigh]. 
% Can consider using level above noisePsd(f).
% Override frequency range by setting fLow or fHigh.
fLow = 0.3e6;
fHigh = 4.5e6;

startSearchIndex = double((1 + floor(fLow/(SampleRate/FFT_LENGTH))));
stopSearchIndex = double((1 + floor(fHigh/(SampleRate/FFT_LENGTH))));

[peakValue, peakLocation, peakWidth, peakProminence] = ...
    findpeaks( psdResonance(startSearchIndex:stopSearchIndex),'MinPeakProminence',PROMINENCE, 'MinPeakHeight',(meanNoiseFloor+Q_DB_ABOVE_NOISE));                
peakLocation = peakLocation + startSearchIndex - 1 ;      

% In frandhover's program, they find troughs as well. I dont think that
% make sense, since peaks valeus are overwritten by troughs, 
% More importantly, they do not use any noise information in that
% calculation. I think they did that only when there the peaks are not
% enough



%% Resonance Part: Find all harmonic sets
DEVIATION_FACTOR = (FFT_LENGTH/PERIODOGRAM_SEGMENT_LENGTH) * 1.5;   
requiredNumberOfHarmonicsInSet = 3;
deviationInFrequency = (SampleRate/FFT_LENGTH) * DEVIATION_FACTOR; 
% Find sets
numberOfSets = 0;
locs = peakLocation;
locs = sort(locs);
locs = flip(locs);
[setsFound, set] = findFrequencySetsCS(locs,psdResonance, SampleRate, FFT_LENGTH,...
    freqFundamentalMinimum, deviationInFrequency, fLow, fHigh, requiredNumberOfHarmonicsInSet);

%% Process the sets

% loop through the set to calculate thickness
for index = 1:length(set)
                averageF0 = set(index).calculateAverageFreqDiff;                                                                
                set(index).thickness = V_PIPE/(2*averageF0);
end
% Remove set with unreasonable thickness 
set = set(([set.thickness] >= D_MIN) & ([set.thickness ] <= D_NOM * 1.1)) ;
% removes all subsets with approx. same thickness
set = removeAllSubsetsWithSameThickness(set);
% calculates Set validation parameters and class      
for i = 1:length(set)
    set(i).calculateValidationParameters(psdNoise, meanNoiseFloor, Q_DB_ABOVE_NOISE, Q_DB_MAX);
	set(i).findVpClass(SampleRate, FFT_LENGTH);
end   
% Calculate group score
findSetGroupScore(set);

%% Find the 'best' set line 211(FindBestSetE)

 setCandidateCombined = findSetBasedOnCombinedGroupAndSubsetScore(set);
 setCandidate = setCandidateCombined;
if( isempty( setCandidate) )             
%Select set with highest class and highest average peak energy
    if(1)
    	classArray = ['A', 'B', 'C', 'D'];            
        	index = 1;
        	setCandidate = [];
        while(isempty( setCandidate))                                
                  setCandidate = findSetWithClassAndHighestAverageEnergy(set, classArray(index));
                  index = index + 1;
        end 
    end
end

thickness = set(setCandidate).thickness;

end
